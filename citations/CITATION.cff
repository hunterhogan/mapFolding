abstract: A computational framework for enumerating distinct folding patterns of
  maps and implementing algorithmic transformations. This repository provides 
  (1) a pure Python implementation of Lunnon's 1971 algorithm, (2) a 
  sophisticated code transformation system that converts human-readable 
  algorithms into highly-optimized implementations, and (3) numerical validation
  against established sequences in the Online Encyclopedia of Integer Sequences 
  (OEIS). Notably, it includes first-ever calculations for 2x19 and 2x20 map 
  foldings, extending OEIS sequence A001415. The framework balances theoretical 
  rigor with performance optimization through abstract syntax tree manipulation,
  dataclass decomposition, and just-in-time compilation techniques. Beyond map 
  folding, the transformation tools offer a general-purpose approach for 
  optimizing numerical algorithms while maintaining readable source 
  implementations.
authors:
- given-names: Hunter
  family-names: Hogan
  email: HunterHogan@pm.me
cff-version: 1.2.0
commit: 75db307fa17501abefe1dcf312307f913a007b3b
date-released: '2025-10-07'
identifiers:
- type: url
  value: https://github.com/hunterhogan/mapFolding/releases/tag/0.16.4
  description: The URL for mapFolding 0.16.4.
keywords:
- A000136
- A000560
- A000682
- A001010
- A001011
- A001415
- A001416
- A001417
- A001418
- A005315
- A005316
- A007822
- A178961
- A195646
- A223094
- A259702
- A301620
- AST manipulation
- JIT compilation
- Numba optimization
- OEIS
- Python optimization
- abstract syntax tree
- algorithmic combinatorics
- algorithmic optimization
- arch configurations
- automated code generation
- bit-packed arrays
- bitwise state machines
- cache-efficient algorithms
- closed meandric numbers
- code generation
- code optimization
- code synthesis
- code transformation
- codon optimization
- combinatorial computing
- combinatorial enumeration
- combinatorial geometry
- combinatorial mathematics
- combinatorial problem solver
- combinatorics
- computational combinatorics
- computational geometry
- crossing patterns
- curve crossings
- dataclass transformation
- discrete mathematics
- dynamic compilation
- enumerative combinatorics
- folding pattern enumeration
- folding problems
- high-performance computing
- integer sequences
- just-in-time compilation
- kernel optimization
- labeled stamp folding
- low-level computation
- map folding
- mapFolding
- mathematical algorithms
- mathematical modeling
- mathematical optimization
- mathematical patterns
- mathematical software
- mathematical tool
- mathematical visualization
- meander enumeration
- meanders
- meandric systems
- memory-efficient enumeration
- metaprogramming
- numerical algorithms
- numerical computation
- open meandric systems
- paper folding mathematics
- parallel computing
- pattern recognition
- performance optimization
- permutation patterns
- permutations
- post-setup optimization
- pyproject
- scientific computing
- semi-meanders
- sequence analysis
- sequence calculator
- sequence enumeration
- sequence explorer
- sequence generation
- source code analysis
- stamp folding
- symbolic computation
- symmetric foldings
- topological combinatorics
- topological patterns
- typed Python
license: CC-BY-NC-4.0
message: Cite this software with the metadata in this file.
repository: https://github.com/hunterhogan/mapFolding.git
repository-artifact: https://pypi.org/project/mapfolding/0.16.4/
repository-code: https://github.com/hunterhogan/mapFolding/releases/tag/0.16.4
title: mapFolding
type: software
url: https://github.com/hunterhogan/mapFolding
version: 0.16.4
